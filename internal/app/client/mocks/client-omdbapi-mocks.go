// Code generated by MockGen. DO NOT EDIT.
// Source: client-omdbapi.go

// Package mock_client is a generated GoMock package.
package mock_client

import (
	reflect "reflect"

	dto "github.com/RadhaGeethikaKandala/MovieRental/internal/app/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockOmdbClient is a mock of OmdbClient interface.
type MockOmdbClient struct {
	ctrl     *gomock.Controller
	recorder *MockOmdbClientMockRecorder
}

// MockOmdbClientMockRecorder is the mock recorder for MockOmdbClient.
type MockOmdbClientMockRecorder struct {
	mock *MockOmdbClient
}

// NewMockOmdbClient creates a new mock instance.
func NewMockOmdbClient(ctrl *gomock.Controller) *MockOmdbClient {
	mock := &MockOmdbClient{ctrl: ctrl}
	mock.recorder = &MockOmdbClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOmdbClient) EXPECT() *MockOmdbClientMockRecorder {
	return m.recorder
}

// GetMovieList mocks base method.
func (m *MockOmdbClient) GetMovieList(name string) dto.OmdbResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMovieList", name)
	ret0, _ := ret[0].(dto.OmdbResponse)
	return ret0
}

// GetMovieList indicates an expected call of GetMovieList.
func (mr *MockOmdbClientMockRecorder) GetMovieList(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMovieList", reflect.TypeOf((*MockOmdbClient)(nil).GetMovieList), name)
}
